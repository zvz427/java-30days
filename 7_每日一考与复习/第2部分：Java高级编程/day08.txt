1.如何遍历Map的key集，value集,key-value集，使用上泛型

Map<String,Integer> map = new HashMap<String,Integer>();
map.put();....
//遍历key
Set<String> keySet = map.keySet();
for(String key : keySet){
	System.out.println(key);
}

//遍历value
Collection<Integer> values = map.values();
Iterator<Integer> iterator = values.iterator();
while(iterator.hasNext()){
	System.out.println(iterator.next());
}

//遍历key-value
Set<Map.Entry<String,Integer>> entrySet = map.entrySet();
Iterator<Map.Entry<String,Integer>> iterator =  entrySet.iterator();
while(iterator.hasNext()){
	Map.Entry<String,Integer> entry = iterator.next();
	String key = entry.getKey();
	Integer value = entry.getValue();
	System.out.println(key + "--->" + value);
}



2. 写出使用Iterator 和 增强for 循环遍历List<String>的代码,使用上泛型



3. 提供一个方法，用于遍历获取HashMap<String,String>中的所有value，并存放在List中返回。考虑上集合中泛型的使用。

public List<String> getValueList(HashMap<String,String> map){
	ArrayList<String> valueList = new ArrayList<>():
	Collection<String> values = map.values();
	for(String value : values){
		valueList.add(value);
	}
	return valueList;
}



4. 创建一个与a.txt文件同目录下的另外一个文件b.txt

File file1 = new File("d:\\a\\a.txt");
File file2 = new File(file1.getParent(),"b.txt");



5. Map接口中的常用方法有哪些
增：put(K k,V v)
删: V remove(K k)
改: put(K k,V v)
查: V get(K k)
长度:int size()
遍历




